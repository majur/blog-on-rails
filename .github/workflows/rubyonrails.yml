# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: self-hosted
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install ruby-build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm6 libgdbm-dev libdb-dev
      - name: Install Ruby
        if: ${{ runner.os == 'Linux' && runner.arch == 'X64' }}
        run: |
          if [ ! -f "/opt/hostedtoolcache/Ruby/3.1.2/x64.complete" ]; then
            mkdir -p /opt/hostedtoolcache/Ruby/3.1.2
            # Install ruby-build if not available
            if ! command -v ruby-build &> /dev/null; then
              git clone https://github.com/rbenv/ruby-build.git
              cd ruby-build
              PREFIX=/usr/local ./install.sh
              cd ..
              rm -rf ruby-build
            fi
            # Install Ruby
            ruby-build 3.1.2 /opt/hostedtoolcache/Ruby/3.1.2/x64
            touch /opt/hostedtoolcache/Ruby/3.1.2/x64.complete
          fi
          echo "PATH=/opt/hostedtoolcache/Ruby/3.1.2/x64/bin:$PATH" >> $GITHUB_ENV
      - name: Install gems
        run: |
          gem install bundler
          bundle install
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Run tests
        run: bin/rake

  lint:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install ruby-build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm6 libgdbm-dev libdb-dev
      - name: Install Ruby
        if: ${{ runner.os == 'Linux' && runner.arch == 'X64' }}
        run: |
          if [ ! -f "/opt/hostedtoolcache/Ruby/3.1.2/x64.complete" ]; then
            mkdir -p /opt/hostedtoolcache/Ruby/3.1.2
            # Install ruby-build if not available
            if ! command -v ruby-build &> /dev/null; then
              git clone https://github.com/rbenv/ruby-build.git
              cd ruby-build
              PREFIX=/usr/local ./install.sh
              cd ..
              rm -rf ruby-build
            fi
            # Install Ruby
            ruby-build 3.1.2 /opt/hostedtoolcache/Ruby/3.1.2/x64
            touch /opt/hostedtoolcache/Ruby/3.1.2/x64.complete
          fi
          echo "PATH=/opt/hostedtoolcache/Ruby/3.1.2/x64/bin:$PATH" >> $GITHUB_ENV
      - name: Install gems
        run: |
          gem install bundler
          bundle install
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bin/bundler-audit --update
      - name: Security audit application code
        run: bin/brakeman -q -w2
      - name: Lint Ruby files
        run: bin/rubocop --parallel
